-- LocalScript: Điều khiển tính năng xuyên tường và giữ cho nhân vật không bị lơ lửng

-- Lấy đối tượng người chơi và nhân vật của họ
local player = game.Players.LocalPlayer

-- Tạo biến trạng thái xuyên tường
local wallPassEnabled = false
local character = player.Character or player.CharacterAdded:Wait()

-- Tạo bảng để lưu trữ BillboardGui cho mỗi người chơi
local playerBillboards = {}

-- Biến để lưu trữ trạng thái kéo cho thanh trượt
local draggingSpeed = false
local draggingJump = false

-- Hàm để tạo GUI và nút
local function createGUI()
    -- Xóa GUI cũ nếu có
    if player:FindFirstChild("PlayerGui"):FindFirstChild("WallPassGui") then
        player:FindFirstChild("PlayerGui"):FindFirstChild("WallPassGui"):Destroy()
    end
    
    -- Tạo GUI mới
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "WallPassGui"
    screenGui.Parent = player:WaitForChild("PlayerGui")

    -- Tạo Frame có thể kéo đi lại
    local draggableFrame = Instance.new("Frame")
    draggableFrame.Size = UDim2.new(0, 400, 0, 230) -- Tăng chiều cao để chứa thanh tiêu đề
    draggableFrame.Position = UDim2.new(0.5, -200, 0.5, -115) -- Điều chỉnh vị trí
    draggableFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    draggableFrame.Active = true
    draggableFrame.Parent = screenGui

    -- Tạo nút hình ảnh để hiển thị lại GUI
    local showButton = Instance.new("ImageButton")
    showButton.Size = UDim2.new(0, 50, 0, 50) -- Giảm kích thước nút
    showButton.Position = UDim2.new(0.5, -25, 0, 0) -- Điều chỉnh vị trí cho phù hợp với kích thước mới
    showButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255) -- Màu xanh lam
    showButton.Visible = false
    showButton.Parent = screenGui

    -- Biến để lưu trữ trạng thái kéo
    local dragging = false
    local dragInput, dragStart, startPos

    -- Hàm để cập nhật vị trí khi kéo
    local function updateInput(input)
        local delta = input.Position - dragStart
        if draggableFrame.Visible then
            draggableFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        elseif showButton.Visible then
            showButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end

    -- Tạo thanh tiêu đề
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    titleBar.Active = true -- Cho phép kéo thả
    titleBar.Parent = draggableFrame

    -- Di chuyển tên nhỏ "Master Manh Hub" vào thanh tiêu đề
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(0, 100, 0, 20)
    nameLabel.Position = UDim2.new(0, 10, 0, 5) -- Điều chỉnh vị trí trong thanh tiêu đề
    nameLabel.Text = "Master Manh Hub"
    nameLabel.TextSize = 10
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- Màu chữ trắng
    nameLabel.BackgroundTransparency = 1 -- Trong suốt nền
    nameLabel.Parent = titleBar -- Đặt nameLabel vào titleBar

    -- Tạo nút thu nhỏ
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Size = UDim2.new(0, 30, 0, 30)
    minimizeButton.Position = UDim2.new(1, -40, 0, 0)
    minimizeButton.Text = "-"
    minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    minimizeButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    minimizeButton.AutoButtonColor = false -- Ngăn không cho nút nháy màu khi chạm
    minimizeButton.Parent = titleBar

    -- Hàm để thu nhỏ GUI
    local function minimizeGUI()
        draggableFrame.Visible = false
        showButton.Visible = true
    end

    -- Hàm để hiển thị lại GUI
    local function showGUI()
        draggableFrame.Visible = true
        showButton.Visible = false
    end

    -- Kết nối sự kiện cho nút thu nhỏ
    minimizeButton.MouseButton1Click:Connect(minimizeGUI)

    -- Kết nối sự kiện cho nút hình ảnh để hiển thị lại GUI
    showButton.MouseButton1Click:Connect(showGUI)

    -- Kết nối sự kiện cho bắt đầu kéo từ nút hình ảnh
    showButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = showButton.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    -- Kết nối sự kiện cho khi kéo
    showButton.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    -- Cập nhật vị trí khi kéo
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            updateInput(input)
        end
    end)

    -- Tạo gạt nút cho Xuyên Tường
    local wallPassLabel = Instance.new("TextLabel")
    wallPassLabel.Size = UDim2.new(0, 100, 0, 50)
    wallPassLabel.Position = UDim2.new(0, 10, 0, 10) -- Điều chỉnh vị trí
    wallPassLabel.Text = "Xuyên Tường"
    wallPassLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    wallPassLabel.BackgroundTransparency = 1
    wallPassLabel.Parent = draggableFrame

    local wallPassSwitch = Instance.new("Frame")
    wallPassSwitch.Size = UDim2.new(0, 50, 0, 25)
    wallPassSwitch.Position = UDim2.new(0, 120, 0, 22) -- Điều chỉnh vị trí để thẳng hàng
    wallPassSwitch.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Màu đỏ cho không kích hoạt
    wallPassSwitch.Parent = draggableFrame

    local wallPassToggle = Instance.new("Frame")
    wallPassToggle.Size = UDim2.new(0, 25, 0, 25)
    wallPassToggle.Position = UDim2.new(0, 0, 0, 0)
    wallPassToggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    wallPassToggle.Parent = wallPassSwitch

    -- Tạo gạt nút cho Hiển thị vị trí
    local displayPositionLabel = Instance.new("TextLabel")
    displayPositionLabel.Size = UDim2.new(0, 100, 0, 50)
    displayPositionLabel.Position = UDim2.new(0, 10, 0, 70) -- Điều chỉnh vị trí
    displayPositionLabel.Text = "Hiển thị vị trí"
    displayPositionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    displayPositionLabel.BackgroundTransparency = 1
    displayPositionLabel.Parent = draggableFrame

    local displayPositionSwitch = Instance.new("Frame")
    displayPositionSwitch.Size = UDim2.new(0, 50, 0, 25)
    displayPositionSwitch.Position = UDim2.new(0, 120, 0, 82) -- Điều chỉnh vị trí để thẳng hàng
    displayPositionSwitch.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Màu đỏ cho không kích hoạt
    displayPositionSwitch.Parent = draggableFrame

    local displayPositionToggle = Instance.new("Frame")
    displayPositionToggle.Size = UDim2.new(0, 25, 0, 25)
    displayPositionToggle.Position = UDim2.new(0, 0, 0, 0)
    displayPositionToggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    displayPositionToggle.Parent = displayPositionSwitch

    -- Biến trạng thái hiển thị vị trí
    local displayPositionEnabled = false

    -- Tạo gạt nút cho Bay
    local flyLabel = Instance.new("TextLabel")
    flyLabel.Size = UDim2.new(0, 100, 0, 50)
    flyLabel.Position = UDim2.new(0, 10, 0, 130) -- Điều chỉnh vị trí
    flyLabel.Text = "Bay"
    flyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    flyLabel.BackgroundTransparency = 1
    flyLabel.Parent = draggableFrame

    local flySwitch = Instance.new("Frame")
    flySwitch.Size = UDim2.new(0, 50, 0, 25)
    flySwitch.Position = UDim2.new(0, 120, 0, 142) -- Điều chỉnh vị trí để thẳng hàng
    flySwitch.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Màu đỏ cho không kích hoạt
    flySwitch.Parent = draggableFrame

    local flyToggle = Instance.new("Frame")
    flyToggle.Size = UDim2.new(0, 25, 0, 25)
    flyToggle.Position = UDim2.new(0, 0, 0, 0)
    flyToggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    flyToggle.Parent = flySwitch

    -- Biến trạng thái bay
    local flyEnabled = false

    -- Hàm để bật/tắt xuyên tường
    local function toggleWallPass()
        wallPassEnabled = not wallPassEnabled
        if wallPassEnabled then
            -- Bật tính năng xuyên tường
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
            wallPassSwitch.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Màu xanh lá cho kích hoạt
            wallPassToggle.Position = UDim2.new(0, 25, 0, 0) -- Di chuyển gạt nút
        else
            -- Tắt tính năng xuyên tường
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
            wallPassSwitch.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Màu đỏ cho không kích hoạt
            wallPassToggle.Position = UDim2.new(0, 0, 0, 0) -- Di chuyển gạt nút
        end
    end

    -- Hàm để bật/tắt hiển thị vị trí
    local function toggleDisplayPosition()
        displayPositionEnabled = not displayPositionEnabled
        if displayPositionEnabled then
            displayPositionSwitch.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Màu xanh lá cho kích hoạt
            displayPositionToggle.Position = UDim2.new(0, 25, 0, 0) -- Di chuyển gạt nút
        else
            displayPositionSwitch.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Màu đỏ cho không kích hoạt
            displayPositionToggle.Position = UDim2.new(0, 0, 0, 0) -- Di chuyển gạt nút

            -- Xóa hoặc ẩn tất cả BillboardGui khi tắt hiển thị vị trí
            for _, billboard in pairs(playerBillboards) do
                if billboard.Parent then
                    billboard:Destroy() -- Xóa BillboardGui
                end
            end
            playerBillboards = {}
        end
    end

    -- Hàm để bật/tắt bay
    local function toggleFly()
        flyEnabled = not flyEnabled
        local anchorPart -- Khối được tạo dưới nhân vật

        if flyEnabled then
            flySwitch.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Màu xanh lá cho kích hoạt
            flyToggle.Position = UDim2.new(0, 25, 0, 0) -- Di chuyển gạt nút
            if character:FindFirstChild("Humanoid") then
                character.Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
            end

            -- Xóa khối khi bắt đầu bay
            if anchorPart then
                anchorPart:Destroy()
                anchorPart = nil
            end

            -- Thêm sự kiện để điều khiển bay
            local userInputService = game:GetService("UserInputService")
            local runService = game:GetService("RunService")

            local flying = true
            local function fly()
                if not flying then return end
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    local camera = workspace.CurrentCamera
                    local moveDirection = Vector3.new()

                    -- Tiến và lùi theo hướng camera
                    if userInputService:IsKeyDown(Enum.KeyCode.W) then
                        moveDirection = moveDirection + camera.CFrame.LookVector
                    end
                    if userInputService:IsKeyDown(Enum.KeyCode.S) then
                        moveDirection = moveDirection - camera.CFrame.LookVector
                    end

                    -- Ngang và dọc theo hướng camera
                    if userInputService:IsKeyDown(Enum.KeyCode.A) then
                        moveDirection = moveDirection - camera.CFrame.RightVector
                    end
                    if userInputService:IsKeyDown(Enum.KeyCode.D) then
                        moveDirection = moveDirection + camera.CFrame.RightVector
                    end

                    -- Cập nhật hướng nhân vật theo hướng đang nhìn
                    if moveDirection.Magnitude > 0 then
                        humanoidRootPart.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + moveDirection)
                    end

                    -- Đảm bảo rằng moveDirection không phải là vector không
                    if moveDirection.Magnitude > 0 then
                        humanoidRootPart.Velocity = moveDirection.Unit * character.Humanoid.WalkSpeed
                        -- Xóa khối khi đang di chuyển
                        if anchorPart then
                            anchorPart:Destroy()
                            anchorPart = nil
                        end
                    else
                        humanoidRootPart.Velocity = Vector3.new(0, 0, 0) -- Dừng lại khi không có đầu vào
                        -- Tạo khối dưới nhân vật khi không di chuyển
                        if not anchorPart then
                            anchorPart = Instance.new("Part")
                            anchorPart.Size = Vector3.new(5, 1, 5) -- Kích thước khối
                            anchorPart.Anchored = true
                            anchorPart.Position = humanoidRootPart.Position - Vector3.new(0, 3, 0) -- Đặt dưới nhân vật
                            anchorPart.Transparency = 1 -- Làm cho khối tàng hình
                            anchorPart.Parent = workspace
                            
                            -- Đặt trạng thái nhân vật đứng dậy
                            if character:FindFirstChild("Humanoid") then
                                character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
                            end
                        end
                    end
                end
            end

            local flyConnection
            flyConnection = runService.RenderStepped:Connect(fly)

            -- Ngắt kết nối khi tắt bay
            flySwitch.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    flying = false
                    flyConnection:Disconnect()
                    -- Xóa khối khi tắt bay
                    if anchorPart then
                        anchorPart:Destroy()
                        anchorPart = nil
                    end
                end
            end)
        else
            flySwitch.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Màu đỏ cho không kích hoạt
            flyToggle.Position = UDim2.new(0, 0, 0, 0) -- Di chuyển gạt nút
            if character:FindFirstChild("Humanoid") then
                character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
            end

            -- Xóa khối khi tắt bay
            if anchorPart then
                anchorPart:Destroy()
                anchorPart = nil
            end
        end
    end

    -- Kết nối sự kiện cho gạt nút
    wallPassSwitch.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            toggleWallPass()
        end
    end)

    -- Kết nối sự kiện cho gạt nút hiển thị vị trí
    displayPositionSwitch.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            toggleDisplayPosition()
        end
    end)

    -- Kết nối sự kiện cho gạt nút bay
    flySwitch.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            toggleFly()
        end
    end)

    -- Hàm để cập nhật danh sách người chơi và hiển thị vị trí
    local function updatePlayerList()
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local billboard = playerBillboards[player]
                    if not billboard then
                        -- Tạo BillboardGui mới nếu chưa có
                        billboard = Instance.new("BillboardGui")
                        billboard.Size = UDim2.new(0, 100, 0, 50)
                        billboard.Adornee = character.HumanoidRootPart
                        billboard.Parent = character
                        billboard.AlwaysOnTop = true -- Luôn hiển thị trên cùng
                        playerBillboards[player] = billboard

                        local textLabel = Instance.new("TextLabel")
                        textLabel.Size = UDim2.new(1, 0, 1, 0)
                        textLabel.BackgroundTransparency = 1
                        textLabel.TextColor3 = Color3.new(1, 1, 1)
                        textLabel.Text = player.Name
                        textLabel.Parent = billboard
                    end

                    -- Tính toán khoảng cách
                    local myCharacter = game.Players.LocalPlayer.Character
                    if myCharacter and myCharacter:FindFirstChild("HumanoidRootPart") then
                        local distance = (myCharacter.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                        billboard.TextLabel.Text = string.format("%s: %.2f m", player.Name, distance)
                    end
                end
            end
        end
    end

    -- Cập nhật danh sách người chơi mỗi khi có người chơi di chuyển
    game:GetService("RunService").Stepped:Connect(function()
        if displayPositionEnabled then
            updatePlayerList()
        end
    end)

    -- Thêm tính năng cuộn cho GUI
    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Size = UDim2.new(1, 0, 1, -30) -- Trừ đi chiều cao của thanh tiêu đề
    scrollingFrame.Position = UDim2.new(0, 0, 0, 30) -- Đặt dưới thanh tiêu đề
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 1.5, 0) -- Tăng kích thước canvas để có thể cuộn
    scrollingFrame.ScrollBarThickness = 10
    scrollingFrame.Parent = draggableFrame

    -- Di chuyển các phần tử vào ScrollingFrame
    -- nameLabel.Parent = scrollingFrame -- Không di chuyển nameLabel vào scrollingFrame
    wallPassLabel.Parent = scrollingFrame
    wallPassSwitch.Parent = scrollingFrame
    displayPositionLabel.Parent = scrollingFrame
    displayPositionSwitch.Parent = scrollingFrame
    flyLabel.Parent = scrollingFrame
    flySwitch.Parent = scrollingFrame

    -- Kết nối sự kiện cho bắt đầu kéo từ thanh tiêu đề
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = draggableFrame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    -- Kết nối sự kiện cho khi kéo
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    -- Cập nhật vị trí khi kéo
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            updateInput(input)
        end
    end)

    -- Tạo thanh trượt cho Tốc độ
    local speedLabel = Instance.new("TextLabel")
    speedLabel.Size = UDim2.new(0, 100, 0, 50)
    speedLabel.Position = UDim2.new(0, 10, 0, 190) -- Điều chỉnh vị trí
    speedLabel.Text = "Tốc độ"
    speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    speedLabel.BackgroundTransparency = 1
    speedLabel.Parent = scrollingFrame

    local speedSlider = Instance.new("Frame")
    speedSlider.Size = UDim2.new(0, 150, 0, 10)
    speedSlider.Position = UDim2.new(0, 120, 0, 205) -- Điều chỉnh vị trí để thẳng hàng
    speedSlider.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    speedSlider.Parent = scrollingFrame

    local speedValue = Instance.new("TextLabel")
    speedValue.Size = UDim2.new(0, 50, 0, 20)
    speedValue.Position = UDim2.new(0, 280, 0, 190) -- Điều chỉnh vị trí
    speedValue.Text = "16" -- Giá trị mặc định
    speedValue.TextColor3 = Color3.fromRGB(255, 255, 255)
    speedValue.BackgroundTransparency = 1
    speedValue.Parent = scrollingFrame

    local speedHandle = Instance.new("Frame")
    speedHandle.Size = UDim2.new(0, 10, 0, 20)
    speedHandle.Position = UDim2.new(0, 0, 0, -5)
    speedHandle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    speedHandle.Parent = speedSlider

    -- Tạo thanh trượt cho Nhảy cao
    local jumpLabel = Instance.new("TextLabel")
    jumpLabel.Size = UDim2.new(0, 100, 0, 50)
    jumpLabel.Position = UDim2.new(0, 10, 0, 250) -- Điều chỉnh vị trí
    jumpLabel.Text = "Nhảy cao"
    jumpLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    jumpLabel.BackgroundTransparency = 1
    jumpLabel.Parent = scrollingFrame

    local jumpSlider = Instance.new("Frame")
    jumpSlider.Size = UDim2.new(0, 150, 0, 10)
    jumpSlider.Position = UDim2.new(0, 120, 0, 265) -- Điều chỉnh vị trí để thẳng hàng
    jumpSlider.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    jumpSlider.Parent = scrollingFrame

    local jumpValue = Instance.new("TextLabel")
    jumpValue.Size = UDim2.new(0, 50, 0, 20)
    jumpValue.Position = UDim2.new(0, 280, 0, 250) -- Điều chỉnh vị trí
    jumpValue.Text = tostring(character.Humanoid.JumpPower) -- Giá trị mặc định
    jumpValue.TextColor3 = Color3.fromRGB(255, 255, 255)
    jumpValue.BackgroundTransparency = 1
    jumpValue.Parent = scrollingFrame

    local jumpHandle = Instance.new("Frame")
    jumpHandle.Size = UDim2.new(0, 10, 0, 20)
    jumpHandle.Position = UDim2.new(0, 0, 0, -5)
    jumpHandle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    jumpHandle.Parent = jumpSlider

    -- Hàm để cập nhật giá trị khi kéo thanh trượt
    local function updateSlider(input, slider, handle, minValue, maxValue, valueLabel)
        local sliderSize = slider.AbsoluteSize.X
        local position = math.clamp(input.Position.X - slider.AbsolutePosition.X, 0, sliderSize)
        handle.Position = UDim2.new(0, position, 0, -5)
        local value = math.floor(minValue + (position / sliderSize) * (maxValue - minValue))
        valueLabel.Text = tostring(value)
        return value
    end

    -- Kết nối sự kiện cho thanh trượt tốc độ
    speedSlider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingSpeed = true
            local speed = updateSlider(input, speedSlider, speedHandle, 16, 300, speedValue)
            character.Humanoid.WalkSpeed = speed
        end
    end)

    speedSlider.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingSpeed = false
        end
    end)

    speedSlider.InputChanged:Connect(function(input)
        if draggingSpeed and input.UserInputType == Enum.UserInputType.MouseMovement then
            local speed = updateSlider(input, speedSlider, speedHandle, 16, 300, speedValue)
            character.Humanoid.WalkSpeed = speed
        end
    end)

    -- Kết nối sự kiện cho thanh trượt nhảy cao
    jumpSlider.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingJump = true
            local jumpPower = updateSlider(input, jumpSlider, jumpHandle, 50, 500, jumpValue)
            character.Humanoid.JumpPower = jumpPower
        end
    end)

    jumpSlider.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            draggingJump = false
        end
    end)

    jumpSlider.InputChanged:Connect(function(input)
        if draggingJump and input.UserInputType == Enum.UserInputType.MouseMovement then
            local jumpPower = updateSlider(input, jumpSlider, jumpHandle, 50, 500, jumpValue)
            character.Humanoid.JumpPower = jumpPower
        end
    end)
end

-- Hàm xử lý khi nhân vật được thêm vào
local function onCharacterAdded(char)
    character = char
    -- Đặt lại trạng thái xuyên tường và tăng tốc độ khi nhân vật được thêm vào (hồi sinh)
    wallPassEnabled = false
    createGUI()
end

-- Đảm bảo rằng tính năng xuyên tường không hoạt động nếu nhân vật chết
local function onCharacterDied()
    -- Đặt lại trạng thái xuyên tường và tăng tốc độ
    wallPassEnabled = false
    createGUI()
end

-- Kết nối sự kiện cho nhân vật mới được thêm vào
player.CharacterAdded:Connect(onCharacterAdded)

-- Theo dõi sự kiện khi nhân vật chết
if character:FindFirstChild("Humanoid") then
    character.Humanoid.Died:Connect(onCharacterDied)
end

-- Tạo GUI lần đầu
createGUI()

-- Cập nhật trạng thái xuyên tường liên tục
game:GetService("RunService").Stepped:Connect(function()
    if wallPassEnabled and character and character:FindFirstChild("HumanoidRootPart") then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)
